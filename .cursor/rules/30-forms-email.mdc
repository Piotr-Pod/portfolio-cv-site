---
id: forms-email
title: 30 — Formularze i e-mail
description: Route Handlers w app/api/*; walidacja zod współdzielona z UI; wysyłka e-mail przez Resend lub Mailgun; format błędów JSON; dobre praktyki: rate-limit, logowanie serwerowe, walidacja długości i typów, brak CSRF przy tym samym originie.
alwaysApply: false
globs:
  - "app/api/contact/**"
  - "app/api/**/route.ts"
  - "lib/validators/**"
  - "lib/email/**"
tags:
  - forms
  - api
  - email
  - zod
---

# 30 — Formularze i e-mail

- **Route Handlers** w `app/api/*`.
- Walidacja wejścia: **zod** (schema współdzielona z UI).
- Wysyłka e-mail: **Resend** lub **Mailgun** (sekrety przez env).

**Format odpowiedzi błędu**
```json
{ "error": { "code": "VALIDATION_ERROR", "message": "Invalid payload", "details": { /* zod */ } } }
```

**Dobre praktyki**
- Prosty rate-limit (np. per IP) w MVP.
- Logi błędów na serwerze, nie ujawniaj szczegółów klientowi.
- CSRF niepotrzebny przy tym samym originie, ale waliduj długości i typy.
- Patrz `snippets/route-handler.md`.
