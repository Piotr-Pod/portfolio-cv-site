-- Supabase schema for Blog (tables + views)
-- This file defines a normalized base table and two views used by the API:
--   - rest/v1/blog_posts        → list/index items (no markdown)
--   - rest/v1/blog_posts_detail → single item with markdown content

-- 1) Enum for supported locales
do $$ begin
  create type locale_enum as enum ('pl', 'en');
exception when duplicate_object then null; end $$;

-- 2) Base table
create table if not exists public.blog_entries (
  id bigserial primary key,
  slug text not null unique,
  locale locale_enum not null default 'pl',
  title text not null,
  description text,
  date date not null,
  tags text[] not null default '{}',
  cover_image_url text,
  author_name text,
  author_avatar text,
  reading_time_minutes integer not null default 1,
  content_markdown text not null,
  draft boolean not null default false,
  created_at timestamptz not null default now(),
  updated_at timestamptz not null default now()
);

-- 3) Update trigger to maintain updated_at
create or replace function public.set_updated_at()
returns trigger as $$
begin
  new.updated_at = now();
  return new;
end;
$$ language plpgsql;

drop trigger if exists trg_blog_entries_updated_at on public.blog_entries;
create trigger trg_blog_entries_updated_at
before update on public.blog_entries
for each row execute function public.set_updated_at();

-- 4) Indexes
create index if not exists idx_blog_entries_date_desc on public.blog_entries (date desc);
create index if not exists idx_blog_entries_tags_gin on public.blog_entries using gin (tags);
create index if not exists idx_blog_entries_locale on public.blog_entries (locale);

-- 5) Views for REST
-- List/index view (no markdown content)
create or replace view public.blog_posts as
select
  slug,
  locale::text as locale,
  title,
  coalesce(description, '') as description,
  date,
  coalesce(tags, '{}') as tags,
  cover_image_url as "coverImageUrl",
  author_name as "authorName",
  author_avatar as "authorAvatar",
  reading_time_minutes as "readingTimeMinutes",
  draft
from public.blog_entries;

-- Detail view (includes markdown)
create or replace view public.blog_posts_detail as
select
  slug,
  locale::text as locale,
  title,
  coalesce(description, '') as description,
  date,
  coalesce(tags, '{}') as tags,
  cover_image_url as "coverImageUrl",
  author_name as "authorName",
  author_avatar as "authorAvatar",
  reading_time_minutes as "readingTimeMinutes",
  content_markdown as "contentMarkdown",
  draft
from public.blog_entries;

-- 6) Row Level Security (RLS) and policies
alter table public.blog_entries enable row level security;

-- Allow anon read of only non-draft rows
do $$ begin
  create policy blog_entries_select_anon on public.blog_entries
    for select
    to anon
    using (not draft);
exception when duplicate_object then null; end $$;

-- Optional: allow service role full access (handled by Supabase by default via service key)

-- 7) Comments (documentation)
comment on table public.blog_entries is 'Blog posts storage (markdown). Views expose list/detail for REST.';
comment on column public.blog_entries.slug is 'URL slug (unique)';
comment on column public.blog_entries.locale is 'Supported locale (pl|en)';
comment on column public.blog_entries.reading_time_minutes is 'Precomputed reading time in minutes';

-- 8) Example queries (for PostgREST)
-- List (used by /rest/v1/blog_posts):
--   select * from public.blog_posts where locale = 'pl' and draft is false order by date desc;
-- Detail (used by /rest/v1/blog_posts_detail):
--   select * from public.blog_posts_detail where slug = 'your-slug' limit 1;


